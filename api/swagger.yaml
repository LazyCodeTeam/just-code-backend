basePath: /
consumes:
    - application/json
definitions:
    Asset:
        description: '# Represents asset'
        properties:
            id:
                description: Asset id
                type: string
                x-go-name: Id
            url:
                description: Asset url
                type: string
                x-go-name: Url
        required:
            - id
            - url
        title: AssetDto
        type: object
        x-go-package: github.com/LazyCodeTeam/just-code-backend/internal/api/dto
    CreateProfileParams:
        description: Represents params for creating profile.
        properties:
            first_name:
                description: User first name
                example: John
                type: string
                x-go-name: FirstName
            last_name:
                description: User last name
                example: Doe
                type: string
                x-go-name: LastName
            nickname:
                description: User nickname
                example: johndoe
                type: string
                x-go-name: Nickname
        required:
            - nickname
        title: CreateProfileParamsDto
        type: object
        x-go-package: github.com/LazyCodeTeam/just-code-backend/internal/api/dto
    Error:
        description: Represents error.
        properties:
            args:
                additionalProperties: {}
                description: Additional arguments
                example:
                    arg1: value1
                    arg2: value2
                type: object
                x-go-name: Args
            code:
                description: Error code - for programmatic error handling
                example: internal_server_error
                type: string
                x-go-name: Code
        required:
            - code
        title: ErrorDto
        type: object
        x-go-package: github.com/LazyCodeTeam/just-code-backend/internal/api/dto
    ExpectedSection:
        description: |-
            Represents desired state of section.
            Will be compared with actual state and required changes will be applied
        properties:
            description:
                description: Section description
                minLength: 1
                type: string
                x-go-name: Description
            id:
                description: Section id -- UUID
                type: string
                x-go-name: Id
            image_url:
                description: Section image url
                minLength: 1
                type: string
                x-go-name: ImageUrl
            name:
                description: Section name
                maxLength: 1024
                minLength: 1
                type: string
                x-go-name: Name
            tasks:
                description: Expended tasks
                items:
                    $ref: '#/definitions/ExpectedTask'
                minLength: 1
                type: array
                x-go-name: Tasks
        required:
            - id
            - name
            - tasks
        title: ExpectedSectionDto
        type: object
        x-go-package: github.com/LazyCodeTeam/just-code-backend/internal/api/dto
    ExpectedTask:
        description: |-
            Represents desired state of task in section.
            Will be compared with actual state and required changes will be applied
        properties:
            content:
                $ref: '#/definitions/ExpectedTaskContent'
            description:
                description: Task description
                minLength: 1
                type: string
                x-go-name: Description
            difficulty:
                description: Task difficulty
                format: int64
                maximum: 10
                minimum: 1
                type: integer
                x-go-name: Difficulty
            id:
                description: Task id -- UUID
                type: string
                x-go-name: Id
            image_url:
                description: Task image url
                minLength: 1
                type: string
                x-go-name: ImageUrl
            is_dynamic:
                description: Task is dynamic - content will not be displayed in standard list. It will be only ueed to generate random tasks for users
                type: boolean
                x-go-name: IsDynamic
            is_public:
                description: Task is public - content will be visible aslo for anonymous users
                type: boolean
                x-go-name: IsPublic
            name:
                description: Task title
                maxLength: 1024
                minLength: 1
                type: string
                x-go-name: Name
        required:
            - id
            - name
            - difficulty
            - is_public
            - is_dynamic
            - content
        title: ExpectedTaskDto
        type: object
        x-go-package: github.com/LazyCodeTeam/just-code-backend/internal/api/dto
    ExpectedTaskContent:
        description: Represents task content.
        properties:
            correct_option:
                description: |-
                    Index of correct answer

                    Required if kind is SINGLE_SELECTION.
                format: int64
                maximum: 63
                minimum: 0
                type: integer
                x-go-name: CorrectOption
            correct_options:
                description: |-
                    Indexes of correct answers

                    Required if kind is MULTI_SELECTION.
                items:
                    format: int64
                    type: integer
                maxLength: 64
                minLength: 1
                type: array
                x-go-name: CorrectOptions
            description:
                description: Task description
                type: string
                x-go-name: Description
            hints:
                description: Task hints
                items:
                    $ref: '#/definitions/ExpectedTaskHint'
                maxLength: 128
                type: array
                x-go-name: Hints
            kind:
                $ref: '#/definitions/TaskContentType'
            options:
                description: |-
                    Possible answers

                    Required if kind is SINGLE_SELECTION or MULTI_SELECTION.
                items:
                    $ref: '#/definitions/ExpectedTaskOption'
                maxLength: 64
                minLength: 2
                type: array
                x-go-name: Options
        required:
            - description
        title: TaskContentDto
        type: object
        x-go-package: github.com/LazyCodeTeam/just-code-backend/internal/api/dto
    ExpectedTaskHint:
        properties:
            content:
                description: Hint content
                type: string
                x-go-name: Content
        required:
            - content
        type: object
        x-go-package: github.com/LazyCodeTeam/just-code-backend/internal/api/dto
    ExpectedTaskOption:
        properties:
            content:
                description: Option content
                type: string
                x-go-name: Content
        required:
            - content
        type: object
        x-go-package: github.com/LazyCodeTeam/just-code-backend/internal/api/dto
    ExpectedTechnology:
        description: |-
            Uepresents desired state of technology.
            Will be compared with actual state and required changes will be applied
        properties:
            description:
                description: Technology description
                minLength: 1
                type: string
                x-go-name: Description
            id:
                description: Technology id -- UUID
                type: string
                x-go-name: Id
            image_url:
                description: Technology image url
                minLength: 1
                type: string
                x-go-name: ImageUrl
            name:
                description: Technology name
                maxLength: 1024
                minLength: 1
                type: string
                x-go-name: Name
            sections:
                description: Expended sections
                items:
                    $ref: '#/definitions/ExpectedSection'
                minLength: 1
                type: array
                x-go-name: ExpectedSections
        required:
            - id
            - name
            - sections
        title: ExpectedTechnologyDto
        type: object
        x-go-package: github.com/LazyCodeTeam/just-code-backend/internal/api/dto
    Profile:
        description: Represents user profile.
        properties:
            avatar_url:
                description: User avatar url
                example: https://example.com/avatar.png
                type: string
                x-go-name: AvatarUrl
            created_at:
                description: User created at
                example: "2021-01-01T00:00:00Z"
                format: date-time
                type: string
                x-go-name: CreatedAt
            first_name:
                description: User first name
                example: John
                type: string
                x-go-name: FirstName
            id:
                description: User id
                example: 123e4567-e89b-12d3-a456-426614174000
                type: string
                x-go-name: Id
            last_name:
                description: User last name
                example: Doe
                type: string
                x-go-name: LastName
            nickname:
                description: User nickname
                example: johndoe
                type: string
                x-go-name: Nickname
        required:
            - id
            - nickname
            - created_at
        title: ProfileDto
        type: object
        x-go-package: github.com/LazyCodeTeam/just-code-backend/internal/api/dto
    Section:
        description: Represents section with preview of tasks.
        properties:
            description:
                description: Section description
                type: string
                x-go-name: Description
            id:
                description: Section id -- UUID
                type: string
                x-go-name: Id
            image_url:
                description: Section image url
                type: string
                x-go-name: ImageUrl
            name:
                description: Section name
                type: string
                x-go-name: Name
            tasks:
                description: Preview of section tasks
                items:
                    $ref: '#/definitions/TaskPreview'
                type: array
                x-go-name: Tasks
        required:
            - id
            - name
            - tasks
        title: SectionDto
        type: object
        x-go-package: github.com/LazyCodeTeam/just-code-backend/internal/api/dto
    SectionPreview:
        description: Represents section preview.
        properties:
            id:
                description: Section id -- UUID
                type: string
                x-go-name: Id
            name:
                description: Section name
                type: string
                x-go-name: Name
        required:
            - id
            - name
        title: SectionPreviewDto
        type: object
        x-go-package: github.com/LazyCodeTeam/just-code-backend/internal/api/dto
    TaskContentType:
        type: string
        x-go-package: github.com/LazyCodeTeam/just-code-backend/internal/api/dto
    TaskPreview:
        description: Represents task preview.
        properties:
            done_at:
                description: Date when task was done - nil if task was not done
                format: date-time
                type: string
                x-go-name: DoneAt
            id:
                description: Section id -- UUID
                type: string
                x-go-name: Id
            is_public:
                description: Is task public - not public task will not be accessible for anonymous users
                type: boolean
                x-go-name: IsPublic
            name:
                description: Section name
                type: string
                x-go-name: Name
        required:
            - id
            - name
            - is_public
        title: TaskPreviewDto
        type: object
        x-go-package: github.com/LazyCodeTeam/just-code-backend/internal/api/dto
    Technology:
        description: Represents technology with preview of sections.
        properties:
            description:
                description: Technology description
                type: string
                x-go-name: Description
            id:
                description: Technology id -- UUID
                type: string
                x-go-name: Id
            image_url:
                description: Technology image url
                type: string
                x-go-name: ImageUrl
            name:
                description: Technology name
                type: string
                x-go-name: Name
            sections:
                description: Preview of technology sections
                items:
                    $ref: '#/definitions/SectionPreview'
                type: array
                x-go-name: Section
        required:
            - id
            - name
            - sections
        title: TechnologyDto
        type: object
        x-go-package: github.com/LazyCodeTeam/just-code-backend/internal/api/dto
info:
    contact:
        email: mateuszledwon@duck.com
        name: Mateusz Ledwoń
        url: https://github.com/Axot017
    description: Documentation of JustCode API
    title: JustCode API
    version: 0.0.1
paths:
    /admin/api/v1/content:
        put:
            description: Takes expected state of content and updates state of content in database to match expected state.
            operationId: contentPut
            parameters:
                - in: body
                  name: Body
                  schema:
                    items:
                        $ref: '#/definitions/ExpectedTechnology'
                    type: array
                - description: If true, then no changes will be committed to database.
                  in: query
                  name: dry_run
                  type: boolean
                  x-go-name: DryRun
            responses:
                "204":
                    $ref: '#/responses/emptyResponse'
                "400":
                    $ref: '#/responses/errorResponse'
                "401":
                    $ref: '#/responses/errorResponse'
                "500":
                    $ref: '#/responses/errorResponse'
            summary: Upload content
            tags:
                - admin
    /admin/api/v1/content/asset:
        put:
            description: Takes asset and uploads it to the storage. Returns url of uploaded asset.
            operationId: contentPutAsset
            parameters:
                - in: body
                  name: Body
                  schema:
                    items:
                        format: uint8
                        type: integer
                    type: array
            responses:
                "200":
                    $ref: '#/responses/contentAssetPutResponse'
                "400":
                    $ref: '#/responses/errorResponse'
                "401":
                    $ref: '#/responses/errorResponse'
                "500":
                    $ref: '#/responses/errorResponse'
            summary: Upload content asset
            tags:
                - admin
    /api/health:
        get:
            description: This will check if the service is up and running.
            operationId: health
            responses:
                "200":
                    $ref: '#/responses/emptyResponse'
                "500":
                    $ref: '#/responses/errorResponse'
            summary: Health check
    /api/v1/content/technologies:
        get:
            description: This will return all technologies along with preview of their sections
            operationId: technologiesGet
            responses:
                "200":
                    $ref: '#/responses/contentGetTechnologiesResponse'
                "401":
                    $ref: '#/responses/errorResponse'
                "500":
                    $ref: '#/responses/errorResponse'
            summary: Get technologies
            tags:
                - content
    /api/v1/content/technology/{technologyId}/sections:
        get:
            description: This will return all sections of technology with preview of their tasks
            operationId: sectionsGet
            parameters:
                - in: path
                  name: technologyId
                  required: true
                  type: string
                  x-go-name: TechnologyId
            responses:
                "200":
                    $ref: '#/responses/contentGetSectionsResponse'
                "401":
                    $ref: '#/responses/errorResponse'
                "500":
                    $ref: '#/responses/errorResponse'
            summary: Get technology sections
            tags:
                - content
    /api/v1/profile/current:
        get:
            description: Returns current profile. If profile does not exist 404 error will be returned.
            operationId: profileGetCurrent
            responses:
                "200":
                    $ref: '#/responses/profileGetCurrentResponse'
                "401":
                    $ref: '#/responses/errorResponse'
                "404":
                    $ref: '#/responses/errorResponse'
                "500":
                    $ref: '#/responses/errorResponse'
            summary: Get current profile
            tags:
                - profile
        put:
            description: |-
                Creates new profile for current user or updates existing one. If profile already exists all fields will be updated.
                Nickname must be unique, otherwise 409 error will be returned.
            operationId: profilePutCurrent
            parameters:
                - in: body
                  name: Body
                  schema:
                    $ref: '#/definitions/CreateProfileParams'
            responses:
                "200":
                    $ref: '#/responses/emptyResponse'
                "401":
                    $ref: '#/responses/errorResponse'
                "409":
                    $ref: '#/responses/errorResponse'
                "500":
                    $ref: '#/responses/errorResponse'
            summary: Update current profile
            tags:
                - profile
    /api/v1/profile/current/avatar:
        delete:
            description: Avatar will be deleted from storage.
            operationId: profileDeleteCurrentAvatar
            responses:
                "200":
                    $ref: '#/responses/emptyResponse'
                "401":
                    $ref: '#/responses/errorResponse'
                "500":
                    $ref: '#/responses/errorResponse'
            summary: Delete current profile avatar.
            tags:
                - profile
        put:
            description: |-
                Image must be in jpeg or png format. Max size is 2MB.
                Should be send as binary data in request body.
            operationId: profilePutCurrentAvatar
            parameters:
                - in: body
                  name: Body
                  schema:
                    items:
                        format: uint8
                        type: integer
                    type: array
            responses:
                "200":
                    $ref: '#/responses/emptyResponse'
                "401":
                    $ref: '#/responses/errorResponse'
                "500":
                    $ref: '#/responses/errorResponse'
            summary: Upload current profile avatar.
            tags:
                - profile
produces:
    - application/json
responses:
    contentAssetPutResponse:
        description: ""
        schema:
            $ref: '#/definitions/Asset'
    contentGetSectionsResponse:
        description: ""
        schema:
            items:
                $ref: '#/definitions/Section'
            type: array
    contentGetTechnologiesResponse:
        description: ""
        schema:
            items:
                $ref: '#/definitions/Technology'
            type: array
    emptyResponse:
        description: Empty response
        schema:
            type: object
    errorResponse:
        description: ""
        schema:
            $ref: '#/definitions/Error'
    profileGetCurrentResponse:
        description: ""
        schema:
            $ref: '#/definitions/Profile'
security:
    - bearer_auth: []
securityDefinitions:
    bearer_auth:
        in: header
        name: Authorization
        type: apiKey
swagger: "2.0"
