basePath: /
consumes:
    - application/json
definitions:
    CreateProfileParams:
        description: CreateProfileParamsDto
        properties:
            first_name:
                description: User first name
                example: John
                type: string
                x-go-name: FirstName
            last_name:
                description: User last name
                example: Doe
                type: string
                x-go-name: LastName
            nickname:
                description: User nickname
                example: johndoe
                type: string
                x-go-name: Nickname
        required:
            - nickname
        type: object
        x-go-package: github.com/LazyCodeTeam/just-code-backend/internal/api/dto
    Error:
        description: ErrorDto
        properties:
            args:
                additionalProperties: {}
                description: Additional arguments
                example:
                    arg1: value1
                    arg2: value2
                type: object
                x-go-name: Args
            code:
                description: Error code - for programmatic error handling
                example: internal_server_error
                type: string
                x-go-name: Code
        required:
            - code
        type: object
        x-go-package: github.com/LazyCodeTeam/just-code-backend/internal/api/dto
    Profile:
        description: ProfileDto
        properties:
            avatar_url:
                description: User avatar url
                example: https://example.com/avatar.png
                type: string
                x-go-name: AvatarUrl
            created_at:
                description: User created at
                example: "2021-01-01T00:00:00Z"
                format: date-time
                type: string
                x-go-name: CreatedAt
            first_name:
                description: User first name
                example: John
                type: string
                x-go-name: FirstName
            id:
                description: User id
                example: 123e4567-e89b-12d3-a456-426614174000
                type: string
                x-go-name: Id
            last_name:
                description: User last name
                example: Doe
                type: string
                x-go-name: LastName
            nickname:
                description: User nickname
                example: johndoe
                type: string
                x-go-name: Nickname
        required:
            - id
            - nickname
            - created_at
        type: object
        x-go-package: github.com/LazyCodeTeam/just-code-backend/internal/api/dto
info:
    contact:
        email: mateuszledwon@duck.com
        name: Mateusz Ledwo≈Ñ
        url: https://github.com/Axot017
    description: Documentation of JustCode API
    title: JustCode API
    version: 0.0.1
paths:
    /api/health:
        get:
            description: This will check if the service is up and running.
            operationId: health
            responses:
                "200":
                    $ref: '#/responses/emptyResponse'
                "500":
                    $ref: '#/responses/errorResponse'
            summary: Health check
    /api/v1/profile/current:
        get:
            description: Returns current profile. If profile does not exist 404 error will be returned.
            operationId: profileGetCurrent
            responses:
                "200":
                    $ref: '#/responses/profileGetCurrentResponse'
                "401":
                    $ref: '#/responses/errorResponse'
                "404":
                    $ref: '#/responses/errorResponse'
                "500":
                    $ref: '#/responses/errorResponse'
            summary: Get current profile
            tags:
                - profile
        put:
            description: |-
                Creates new profile for current user or updates existing one. If profile already exists all fields will be updated.
                Nickname must be unique, otherwise 409 error will be returned.
            operationId: profilePutCurrentParams
            parameters:
                - in: body
                  name: Body
                  schema:
                    $ref: '#/definitions/CreateProfileParams'
            responses:
                "200":
                    $ref: '#/responses/emptyResponse'
                "401":
                    $ref: '#/responses/errorResponse'
                "409":
                    $ref: '#/responses/errorResponse'
                "500":
                    $ref: '#/responses/errorResponse'
            summary: Update current profile
            tags:
                - profile
    /api/v1/profile/current/avatar:
        delete:
            operationId: profileDeleteCurrentAvatar
            responses:
                "200":
                    $ref: '#/responses/emptyResponse'
                "401":
                    $ref: '#/responses/errorResponse'
                "500":
                    $ref: '#/responses/errorResponse'
            summary: '# Delete current profile avatar.'
            tags:
                - profile
        put:
            description: |-
                Image must be in jpeg or png format. Max size is 2MB.
                Should be send as binary data in request body.
            operationId: profilePutCurrentAvatarParams
            parameters:
                - in: body
                  name: Body
                  schema:
                    items:
                        format: uint8
                        type: integer
                    type: array
            responses:
                "200":
                    $ref: '#/responses/emptyResponse'
                "401":
                    $ref: '#/responses/errorResponse'
                "500":
                    $ref: '#/responses/errorResponse'
            summary: Upload current profile avatar.
            tags:
                - profile
produces:
    - application/json
responses:
    emptyResponse:
        description: Empty response
        schema:
            type: object
    errorResponse:
        description: ""
        schema:
            $ref: '#/definitions/Error'
    profileGetCurrentResponse:
        description: ""
        schema:
            $ref: '#/definitions/Profile'
security:
    - bearer_auth: []
securityDefinitions:
    bearer_auth:
        in: header
        name: Authorization
        type: apiKey
swagger: "2.0"
