name: 'Deploy dev'


on:
  push:
    branches:
      - master

env:
  MIGRATE_VERSION: v4.16.2
  CLOUD_SQL_PROXY_VERSION: v2.6.0

jobs:
  upload-dev-mage:
    runs-on: ubuntu-latest
    name: Upload docker dev image
    env:
      IMAGE_TAG: ${{ github.run_number }}
    outputs:
      image_tag: ${{ env.IMAGE_TAG }}
    steps: 
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up buildx
        uses: docker/setup-buildx-action@v2

      - id: auth
        name: Authenticate to Google Cloud
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.DEV_GCP_CREDENTIALS }}'
          token_format: 'access_token'

      - name: Login to Artifact Registry
        uses: 'docker/login-action@v1'
        with:
          registry: 'europe-central2-docker.pkg.dev'
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'

      - name: Insall migrate
        run: |
          mkdir migrate
          cd migrate
          curl -L https://github.com/golang-migrate/migrate/releases/download/$MIGRATE_VERSION/migrate.linux-amd64.tar.gz | tar xvz
          sudo mv migrate /usr/bin/migrate 
          cd ..
          rm -r migrate

      - name: Insall cloud sql proxy
        run: |
          mkdir proxy
          cd proxy

          curl -o cloud-sql-proxy https://storage.googleapis.com/cloud-sql-connectors/cloud-sql-proxy/$CLOUD_SQL_PROXY_VERSION/cloud-sql-proxy.linux.amd64
          chmod +x cloud-sql-proxy 
          sudo mv cloud-sql-proxy /usr/bin/cloud-sql-proxy

          cd ..
          rm -r proxy

      - name: Build and upload image
        uses: docker/build-push-action@v4
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: Dockerfile
          platforms: linux/amd64 
          tags: | 
            europe-central2-docker.pkg.dev/just-code-dev/just-code-dev/just-code-dev:${{ env.IMAGE_TAG }}
            europe-central2-docker.pkg.dev/just-code-dev/just-code-dev/just-code-dev:latest
          push: true

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Init terraform
        working-directory: ./deployments/infrastructure/dev
        run: terraform init

      - name: Deploy
        working-directory: ./deployments/infrastructure/dev
        env:
          TF_VAR_image_tag: ${{ env.IMAGE_TAG }}
        run: terraform apply -auto-approve

      - name: Migrate DB
        env:
          DB_USER: ${{ secrets.DB_URL_ENCODED_USER }}
          DB_PASSWORD: ${{ secrets.DB_URL_ENCODED_PASSWORD }}
        run: |
          connection_name=$(terraform output db_connection_name  | sed 's/^.//;s/.$//')
          cloud-sql-proxy $connection_name &
          PROXY_PID=$!
          migrate -database "postgres://$DB_USER:$DB_PASSWORD@localhost:5432/just-code?sslmode=disable" -path db/migration down
          kill -9 $PROXY_PID

          
